{"version":3,"sources":["Component.tsx"],"names":["requireNativeComponent"],"mappings":"AAAA,SAEEA,sBAFF,QAIO,cAJP;AA4BA,eAAeA,sBAAsB,CACnC,eADmC,CAArC","sourcesContent":["import {\n  NativeSyntheticEvent,\n  requireNativeComponent,\n  ViewStyle,\n} from 'react-native';\nimport type { StreamState } from './types';\n\ntype RTMPData<T> = { data: T };\n\nexport type ConnectionFailedType = NativeSyntheticEvent<RTMPData<string>>;\nexport type ConnectionStartedType = NativeSyntheticEvent<RTMPData<string>>;\nexport type ConnectionSuccessType = NativeSyntheticEvent<RTMPData<null>>;\nexport type DisconnectType = NativeSyntheticEvent<RTMPData<null>>;\nexport type NewBitrateReceivedType = NativeSyntheticEvent<RTMPData<number>>;\nexport type StreamStateChangedType = NativeSyntheticEvent<\n  RTMPData<StreamState>\n>;\nexport interface NativeRTMPPublisherProps {\n  style?: ViewStyle;\n  streamURL: string;\n  streamName: string;\n  onConnectionFailed?: (e: ConnectionFailedType) => void;\n  onConnectionStarted?: (e: ConnectionStartedType) => void;\n  onConnectionSuccess?: (e: ConnectionSuccessType) => void;\n  onDisconnect?: (e: DisconnectType) => void;\n  onNewBitrateReceived?: (e: NewBitrateReceivedType) => void;\n  onStreamStateChanged?: (e: StreamStateChangedType) => void;\n}\nexport default requireNativeComponent<NativeRTMPPublisherProps>(\n  'RTMPPublisher'\n);\n"]}