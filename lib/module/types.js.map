{"version":3,"sources":["types.ts"],"names":["StreamState"],"mappings":"AA0EA,WAAYA,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W","sourcesContent":["import type { ViewStyle } from 'react-native';\n\nexport interface RTMPPublisherRefProps {\n  /**\n   * Starts stream operation\n   */\n  startStream: () => Promise<void>;\n  /**\n   * Stops stream operation\n   */\n  stopStream: () => Promise<void>;\n  /**\n   * Checks stream status\n   */\n  isStreaming: () => Promise<boolean>;\n  /**\n   * Checks if camera on mount\n   */\n  isCameraOnPreview: () => Promise<boolean>;\n  /**\n   * Gets settled publish url\n   */\n  getPublishURL: () => Promise<string>;\n  /**\n   * Checks congestion status\n   */\n  hasCongestion: () => Promise<boolean>;\n  /**\n   * Checks audio status\n   */\n  isAudioPrepared: () => Promise<boolean>;\n  /**\n   * Checks video status\n   */\n  isVideoPrepared: () => Promise<boolean>;\n  /**\n   * Checks if mic closed\n   */\n  isMuted: () => Promise<boolean>;\n  /**\n   * Mutes the mic\n   */\n  mute: () => Promise<void>;\n  /**\n   * Unmutes the mic\n   */\n  unmute: () => Promise<void>;\n  /**\n   * Switches the camera\n   */\n  switchCamera: () => Promise<void>;\n  /**\n   * Toggles the flash\n   */\n  toggleFlash: () => Promise<void>;\n}\n\nexport interface RTMPPublisherProps {\n  style?: ViewStyle;\n  streamURL: string;\n  streamName: string;\n  onConnectionFailed?: (e: null) => void;\n  onConnectionStarted?: (e: null) => void;\n  onConnectionSuccess?: (e: null) => void;\n  onDisconnect?: (e: null) => void;\n  onNewBitrateReceived?: (e: number) => void;\n  onStreamStateChanged?: (e: StreamState) => void;\n}\nexport type StreamStatus =\n  | 'CONNECTING'\n  | 'CONNECTED'\n  | 'DISCONNECTED'\n  | 'FAILED';\n\nexport enum StreamState {\n  CONNECTING = 'CONNECTING',\n  CONNECTED = 'CONNECTED',\n  DISCONNECTED = 'DISCONNECTED',\n  FAILED = 'FAILED',\n}\n"]}